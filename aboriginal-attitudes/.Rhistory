}
shinyApp(ui, server)
library(shiny)
library(leaflet)
r_colors <- rgb(t(col2rgb(colors()) / 255))
names(r_colors) <- colors()
ui <- fluidPage(
leafletOutput("mymap"),
p()
)
server <- function(input, output, session) {
points.x <- c(115.7789054,115.7503855)
points.y <- c(-31.9813918,-31.9905202)
points <- cbind(points.x,points.y)
output$mymap <- renderLeaflet({
leaflet() %>%
setView(lat = -32, lng = 115.7, zoom = 11.5) %>%
addProviderTiles("OpenStreetMap.Mapnik",
options = providerTileOptions(noWrap = TRUE)
) %>%
addCircleMarkers(data = points)
})
}
shinyApp(ui, server)
print(source('Desktop/Cultured Travel/interactive-map-application.R')$value)
Q
print(source('Desktop/Cultured Travel/interactive-map-application.R')$value)
print(source('Desktop/Cultured Travel/interactive-map-application.R')$value)
print(source('Desktop/Cultured Travel/interactive-map-application.R')$value)
library(shiny)
library(leaflet)
r_colors <- rgb(t(col2rgb(colors()) / 255))
names(r_colors) <- colors()
Q
print(source('Desktop/Cultured Travel/interactive-map-application.R')$value)
library(shiny); print(source('Desktop/Cultured Travel/interactive-map-application.R')$value)
library(shiny)
library(leaflet)
r_colors <- rgb(t(col2rgb(colors()) / 255))
names(r_colors) <- colors()
ui <- fluidPage(
leafletOutput("mymap"),
p()
)
server <- function(input, output, session) {
points.x <- c(115.7789054,115.7503855,115.7656603)
points.y <- c(-31.9813918,-31.9905202,-31.9591545)
points <- cbind(points.x,points.y)
output$mymap <- renderLeaflet({
leaflet() %>%
setView(lat = -31.9, lng = 115.7, zoom = 11) %>%
addProviderTiles("OpenStreetMap.Mapnik",
options = providerTileOptions(noWrap = TRUE)
) %>%
addCircleMarkers(data = points)
})
}
shinyApp(ui, server)
library(shiny)
library(leaflet)
r_colors <- rgb(t(col2rgb(colors()) / 255))
names(r_colors) <- colors()
ui <- fluidPage(
leafletOutput("mymap"),
p()
)
server <- function(input, output, session) {
points.x <- c(115.7789054,115.7503855,115.7656603)
points.y <- c(-31.9813918,-31.9905202,-31.9591545)
points <- cbind(points.x,points.y)
output$mymap <- renderLeaflet({
leaflet() %>%
setView(lat = -32, lng = 115.7, zoom = 11) %>%
addProviderTiles("OpenStreetMap.Mapnik",
options = providerTileOptions(noWrap = TRUE)
) %>%
addCircleMarkers(data = points)
})
}
shinyApp(ui, server)
library(shiny)
library(leaflet)
r_colors <- rgb(t(col2rgb(colors()) / 255))
names(r_colors) <- colors()
ui <- fluidPage(
leafletOutput("mymap"),
p()
)
server <- function(input, output, session) {
points.x <- c(115.7789054,115.7503855,115.7656603)
points.y <- c(-31.9813918,-31.9905202,-31.9591545)
points <- cbind(points.x,points.y)
output$mymap <- renderLeaflet({
leaflet() %>%
setView(lat = -31.95, lng = 115.7, zoom = 11) %>%
addProviderTiles("OpenStreetMap.Mapnik",
options = providerTileOptions(noWrap = TRUE)
) %>%
addCircleMarkers(data = points)
})
}
shinyApp(ui, server)
library(shiny)
library(leaflet)
r_colors <- rgb(t(col2rgb(colors()) / 255))
names(r_colors) <- colors()
ui <- fluidPage(
leafletOutput("mymap"),
p()
)
server <- function(input, output, session) {
points.x <- c(115.7789054,115.7503855,115.7656603)
points.y <- c(-31.9813918,-31.9905202,-31.9591545)
points <- cbind(points.x,points.y)
output$mymap <- renderLeaflet({
leaflet() %>%
setView(lat = -31.95, lng = 115.7, zoom = 12) %>%
addProviderTiles("OpenStreetMap.Mapnik",
options = providerTileOptions(noWrap = TRUE)
) %>%
addCircleMarkers(data = points)
})
}
shinyApp(ui, server)
library(shiny)
library(leaflet)
r_colors <- rgb(t(col2rgb(colors()) / 255))
names(r_colors) <- colors()
ui <- fluidPage(
leafletOutput("mymap"),
p()
)
server <- function(input, output, session) {
points.x <- c(115.7789054,115.7503855,115.7656603)
points.y <- c(-31.9813918,-31.9905202,-31.9591545)
points <- cbind(points.x,points.y)
output$mymap <- renderLeaflet({
leaflet() %>%
setView(lat = -31.975, lng = 115.7, zoom = 12) %>%
addProviderTiles("OpenStreetMap.Mapnik",
options = providerTileOptions(noWrap = TRUE)
) %>%
addCircleMarkers(data = points)
})
}
shinyApp(ui, server)
library(shiny)
library(leaflet)
r_colors <- rgb(t(col2rgb(colors()) / 255))
names(r_colors) <- colors()
ui <- fluidPage(
leafletOutput("mymap"),
p()
)
server <- function(input, output, session) {
points.x <- c(115.7789054,115.7503855,115.7656603)
points.y <- c(-31.9813918,-31.9905202,-31.9591545)
points <- cbind(points.x,points.y)
output$mymap <- renderLeaflet({
leaflet() %>%
setView(lat = -31.97, lng = 115.7, zoom = 12) %>%
addProviderTiles("OpenStreetMap.Mapnik",
options = providerTileOptions(noWrap = TRUE)
) %>%
addCircleMarkers(data = points)
})
}
shinyApp(ui, server)
library(shiny)
library(leaflet)
r_colors <- rgb(t(col2rgb(colors()) / 255))
names(r_colors) <- colors()
ui <- fluidPage(
leafletOutput("mymap"),
p()
)
server <- function(input, output, session) {
points.x <- c(115.7789054,115.7503855,115.7656603)
points.y <- c(-31.9813918,-31.9905202,-31.9591545)
points <- cbind(points.x,points.y)
output$mymap <- renderLeaflet({
leaflet() %>%
setView(lat = -31.97, lng = 115.7, zoom = 12.5) %>%
addProviderTiles("OpenStreetMap.Mapnik",
options = providerTileOptions(noWrap = TRUE)
) %>%
addCircleMarkers(data = points)
})
}
shinyApp(ui, server)
library(shiny)
library(leaflet)
r_colors <- rgb(t(col2rgb(colors()) / 255))
names(r_colors) <- colors()
ui <- fluidPage(
leafletOutput("mymap"),
p()
)
server <- function(input, output, session) {
points.x <- c(115.7789054,115.7503855,115.7656603)
points.y <- c(-31.9813918,-31.9905202,-31.9591545)
points <- cbind(points.x,points.y)
output$mymap <- renderLeaflet({
leaflet() %>%
setView(lat = -31.97, lng = 115.7, zoom = 12.5) %>%
addProviderTiles("OpenStreetMap.Mapnik",
options = providerTileOptions(noWrap = TRUE)
) %>%
addCircleMarkers(data = points)
})
}
shinyApp(ui, server)
symbols()
version
library(lubridate)
install.packages('lubridate')
install.packages("lubridate")
version
shiny::runApp('Desktop/Dropbox/RTH/Clients/Cultured Travel/interactive-map')
runApp('Desktop/Dropbox/RTH/Clients/Cultured Travel/interactive-map')
runApp('Desktop/Dropbox/RTH/Clients/Cultured Travel/interactive-map')
runApp('Desktop/Dropbox/RTH/Clients/Cultured Travel/interactive-map')
runApp('Desktop/Dropbox/RTH/Clients/Cultured Travel/interactive-map')
runApp('Desktop/Dropbox/RTH/Clients/Cultured Travel/interactive-map')
print(source('Desktop/Dropbox/RTH/Clients/Cultured Travel/interactive-map/test-title.R')$value)
print(source('Desktop/Dropbox/RTH/Clients/Cultured Travel/interactive-map/test-title.R')$value)
print(source('test-title.R')$value)
print(source('test-title.R')$value)
print(source('test-title.R')$value)
print(source('test-title.R')$value)
print(source('test-title.R')$value)
print(source('test-title.R')$value)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
setwd("~")
getwd()
write.csv("a","Desktop/a.csv")
runApp('Desktop/Dropbox/RTH/Clients/Cultured Travel/interactive-map')
library('Rselenium')
library('RSelenium')
checkForServer()
startser\
startServer()
browse <- webElement()
browse$open()
browse$navigate("http://www.google.com")
browse$navigate("http://www.weather.gov")
browse$open()
checkForServer()
startServer()
br <- webElement()
br$open()
br$navigate("http://www.google.com")
runApp('Desktop/Dropbox/RTH/Clients/Cultured Travel/interactive-map')
mybrowser <- remoteDriver(remoteServerAddr = "localhost",port = 4444)
mybroser$open
mybrowser$open
mybrowser$open()
runApp('Desktop/Dropbox/RTH/Clients/Cultured Travel/interactive-map')
mybrowser$navigate("http://0.0.1:3958")
mybrowser$navigate("http://127.0.0.1:3958")
mybrowser$navigate("http://127.0.0.1:4012")
mybrowser$navigate("http://127.0.0.1:4012")
mybrowser$open()
mybrowser$navigate("http://127.0.0.1:4012")
mybrowser$navigate("http://127.0.0.1:4012")
mybrowser <- remoteDriver()
mybrowser$open()
mybrowser$navigate("http://127.0.0.1:4012")
write.csv("a","~/Desktop/a.csv")
runApp("~/Desktop/Dropbox/RTH/Clients/Cultured Travel/interactive-map/app.R",port = getOption("shiny.port",4012))
library(RSelenium)
library(shiny)
runApp("~/Desktop/Dropbox/RTH/Clients/Cultured Travel/interactive-map/app.R",port = getOption("shiny.port",4012))
library(RSelenium)
library(shiny)
runApp("~/Desktop/Dropbox/RTH/Clients/Cultured Travel/interactive-map/app.R",port = getOption("shiny.port",4012))
library(RSelenium)
library(shiny)
runApp("~/Desktop/Dropbox/RTH/Clients/Cultured Travel/interactive-map/app.R",port = getOption("shiny.port",4012))
runApp("~/Desktop/Dropbox/RTH/Clients/CulturedTravel/interactive-map/app.R",port = getOption("shiny.port",4012))
shiny::runApp('Desktop/Dropbox/RTH/Clients/PlaceCams/shiny-application/PlaceCams')
runApp('Desktop/Dropbox/RTH/Clients/PlaceCams/shiny-application/PlaceCams')
library(RSelenium)
library("RSelenium")
startServer()
mybrowser <- remoteDriver()
mybrowser$open()
mybrowser$navigate("http://www.weather.gov")
library("RSelenium")
startServer()
checkForServer()
startServer()
checkForServer()
remDr <- remoteDriver()
remDr$open()
remDr$navigate("http://www.weather.gov")
library(rvest)
html <- read_html(url)
url <- "http://www.pro-football-reference.com/play-index/nfl-combine-results.cgi?request=1&year_min=2012&year_max=2016&height_min=65&height_max=82&weight_min=149&weight_max=375&pos=QB&show=p&order_by=height_in"
html <- read_html(url)
html
html <- html_nodes(html,".right:nth-child(8)")
html.text <- html_text(html)
html.text
shiny::runApp('Desktop/RTH/Clients/Cultured-Travel/perth-events')
runApp('Desktop/RTH/Clients/Cultured-Travel/perth-events')
runApp('Desktop/RTH/Clients/Cultured-Travel/perth-events')
shiny::runApp('Desktop/RTH/Clients/MoreThanIdeas/aboriginal-attitudes/app/aboriginal-attitudes')
runApp('Desktop/RTH/Clients/MoreThanIdeas/aboriginal-attitudes/app/aboriginal-attitudes')
runApp('Desktop/RTH/Clients/MoreThanIdeas/aboriginal-attitudes/app/aboriginal-attitudes')
runApp('Desktop/RTH/Clients/MoreThanIdeas/aboriginal-attitudes/app/aboriginal-attitudes')
runApp('Desktop/RTH/Clients/MoreThanIdeas/aboriginal-attitudes/app/aboriginal-attitudes')
runApp('Desktop/RTH/Clients/MoreThanIdeas/aboriginal-attitudes/app/aboriginal-attitudes')
runApp('Desktop/RTH/Clients/MoreThanIdeas/aboriginal-attitudes/app/aboriginal-attitudes')
runApp('Desktop/RTH/Clients/MoreThanIdeas/aboriginal-attitudes/app/aboriginal-attitudes')
runApp('Desktop/RTH/Clients/MoreThanIdeas/aboriginal-attitudes/app/aboriginal-attitudes')
runApp('Desktop/RTH/Clients/MoreThanIdeas/aboriginal-attitudes/app/aboriginal-attitudes')
runApp('Desktop/RTH/Clients/MoreThanIdeas/aboriginal-attitudes/app/aboriginal-attitudes')
runApp('Desktop/RTH/Clients/MoreThanIdeas/aboriginal-attitudes/app/aboriginal-attitudes')
runApp('Desktop/RTH/Clients/MoreThanIdeas/aboriginal-attitudes/app/aboriginal-attitudes')
runApp('Desktop/RTH/Clients/MoreThanIdeas/aboriginal-attitudes/app/aboriginal-attitudes')
runApp('Desktop/RTH/Clients/MoreThanIdeas/aboriginal-attitudes/app/aboriginal-attitudes')
runApp('Desktop/RTH/Clients/MoreThanIdeas/aboriginal-attitudes/app/aboriginal-attitudes')
runApp('Desktop/RTH/Clients/MoreThanIdeas/aboriginal-attitudes/app/aboriginal-attitudes')
runApp('Desktop/RTH/Clients/MoreThanIdeas/aboriginal-attitudes/app/aboriginal-attitudes')
runApp('Desktop/RTH/Clients/MoreThanIdeas/aboriginal-attitudes/app/aboriginal-attitudes')
runApp('Desktop/RTH/Clients/MoreThanIdeas/aboriginal-attitudes/app/aboriginal-attitudes')
runApp('Desktop/RTH/Clients/MoreThanIdeas/aboriginal-attitudes/app/aboriginal-attitudes')
runApp('Desktop/RTH/Clients/MoreThanIdeas/aboriginal-attitudes/app/aboriginal-attitudes')
runApp('Desktop/RTH/Clients/MoreThanIdeas/aboriginal-attitudes/app/aboriginal-attitudes')
runApp('Desktop/RTH/Clients/MoreThanIdeas/aboriginal-attitudes/app/aboriginal-attitudes')
runApp('Desktop/RTH/Clients/MoreThanIdeas/aboriginal-attitudes/app/aboriginal-attitudes')
runApp('Desktop/RTH/Clients/MoreThanIdeas/aboriginal-attitudes/app/aboriginal-attitudes')
runApp('Desktop/RTH/Clients/MoreThanIdeas/aboriginal-attitudes/app/aboriginal-attitudes')
runApp('Desktop/RTH/Clients/MoreThanIdeas/aboriginal-attitudes/app/aboriginal-attitudes')
runApp('Desktop/RTH/Clients/MoreThanIdeas/aboriginal-attitudes/app/aboriginal-attitudes')
runApp('Desktop/RTH/Clients/MoreThanIdeas/aboriginal-attitudes/app/aboriginal-attitudes')
runApp('Desktop/RTH/Clients/MoreThanIdeas/aboriginal-attitudes/app/aboriginal-attitudes')
runApp('Desktop/RTH/Clients/MoreThanIdeas/aboriginal-attitudes/app/aboriginal-attitudes')
shiny::runApp('Desktop/RTH/Clients/MoreThanIdeas/aboriginal-attitudes/app/aboriginal-attitudes')
shiny::runApp('Desktop/RTH/Clients/MoreThanIdeas/aboriginal-attitudes/app/aboriginal-attitudes')
shiny::runApp('Desktop/RTH/Clients/MoreThanIdeas/aboriginal-attitudes/app/aboriginal-attitudes')
library('tibble')
devtools::install_github("tidyverse/tibble")
library(Rcpp)
runApp('Desktop/RTH/Clients/MoreThanIdeas/aboriginal-attitudes/app/aboriginal-attitudes')
library(ggplot2)
version
comments <- paste(" ",paste(all.comments,collapse = " ")," ")
setwd("Desktop/RTH/Clients/MoreThanIdeas/aboriginal-attitudes/app/aboriginal-attitudes")
kwList <- read.csv("Data/keywordList.csv")
keywords <- as.character(kwList$Keywords)
keywords <- strsplit(keywords,"\\,")
alignCenter <- function(el) {
htmltools::tagAppendAttributes(el,
style="margin-left:auto;margin-right:auto;"
)
}
for(ii in 1:length(keywords)){
for(jj in 1:length(keywords[[ii]])){
keywords[[ii]][jj] <- paste0(" ",keywords[[ii]][jj]," ")
}
}
con <- dbConnect(RSQLite::SQLite(),"Data/data.sqlite")
commdb <- dbGetQuery(con,paste0('select * from FacebookConversation'))
comments_created <- commdb$COMMENT_CREATED
comments_created <- substr(comments_created,1,10)
commdb$COMMENT_CREATED <- comments_created
commdb <- commdb[order(commdb$COMMENT_CREATED),]
comments_created <- sort(unique(commdb$COMMENT_CREATED))
post_sources <- names(sort(table(commdb$POST_FROM),decreasing = TRUE))
library(shiny)
library(RSQLite)
library(ggplot2)
library(plotly)
library(tm)
library(stringr)
options(warn = -1)
#setwd("Desktop/RTH/Clients/MoreThanIdeas/aboriginal-attitudes/app/aboriginal-attitudes")
kwList <- read.csv("Data/keywordList.csv")
keywords <- as.character(kwList$Keywords)
keywords <- strsplit(keywords,"\\,")
alignCenter <- function(el) {
htmltools::tagAppendAttributes(el,
style="margin-left:auto;margin-right:auto;"
)
}
for(ii in 1:length(keywords)){
for(jj in 1:length(keywords[[ii]])){
keywords[[ii]][jj] <- paste0(" ",keywords[[ii]][jj]," ")
}
}
con <- dbConnect(RSQLite::SQLite(),"Data/data.sqlite")
commdb <- dbGetQuery(con,paste0('select * from FacebookConversation'))
comments_created <- commdb$COMMENT_CREATED
comments_created <- substr(comments_created,1,10)
commdb$COMMENT_CREATED <- comments_created
commdb <- commdb[order(commdb$COMMENT_CREATED),]
comments_created <- sort(unique(commdb$COMMENT_CREATED))
post_sources <- names(sort(table(commdb$POST_FROM),decreasing = TRUE))
dbs.i <- 1000
dbe.i <- 40000
db <- commdb[dbs.i:dbe.i,]
nrow(db)
print(nrow(db))
if(post_source != "All Sources"){ db <- db[which(db$POST_FROM == post_source),] }
print(nrow(db))
all.comments <- db$COMMENT
head(all.comments)
print(length(all.comments))
comments <- paste(" ",paste(all.comments,collapse = " ")," ")
comments <- gsub("[[:punct:]]|[0-9]","",comments)
comments <- tolower(comments)
print(substr(comments,10000))
print(substr(comments,1,1000))
print(substr(comments,1,10000))
comments <- strsplit(" ")
comments <- strsplit(comments," ")
comments
runApp()
stopwords
stopwords()
kw.tab <- table(comments)
kw.tab
kw.tab <- as.data.frame(kw.tab)
any(kw.tab$comments == stopwords[ii]
)
all.comments <- db$COMMENT
print(length(all.comments))
comments <- paste(" ",paste(all.comments,collapse = " ")," ")
comments <- gsub("[[:punct:]]|[0-9]","",comments)
comments <- tolower(comments)
comments_string <- paste0(" ",comments," ")
comments <- strsplit(comments," ")
## MAKE THE KEYWORD TABLE
kw.tab <- table(comments)
kw.tab <- as.data.frame(kw.tab)
kw.tab$comments <- gsub("\n","",kw.tab$comments)
head(kw.tab$comments)
kw.tab$comments
stopwords <- gsub("[[:punct:]]","",stopwords("en"))
stopwords
stopwords <- gsub("s$|ing$","",stopwords)
stopwords
ii
length(stopwords)
ii <- 1
stopwords[ii]
any(kw.tab$comments == stopwords[ii])
which(kw.tab$comments == stopwords[ii])
kw.tab$comments[c(115,484,17419)]
stopwords <- gsub("[[:punct:]]","",stopwords("en"))
stopwords <- gsub("s$|ing$","",stopwords)
kw.remove <- c()
for(ii in 1:length(stopwords)){
if(any(kw.tab$comments == stopwords[ii])){
kw.remove <- c(kw.remove,which(kw.tab$comments == stopwords[ii]))
}
}
kw.remove
kw.tab <- kw.tab[-kw.remove,]
kw.tab
runApp()
runApp()
runApp()
runApp()
runApp()
rsconnect::setAccountInfo(name='honeybulr', token='EC12BC010ABC60CE666C179B09D8DF9D', secret='h5ZJ24vuS1xahHJyBjrdWYmbnGrIKef/TIVwaENZ')
runApp()
